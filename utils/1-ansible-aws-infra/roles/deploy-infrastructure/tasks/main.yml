---
# tasks file for deploy-infra
- name: Create a security group for build server
  ec2_group:
    name: "{{ security_group_build }}"
    description: "{{ security_group_build }}"
    region: "{{ region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0

- name: Deploy Build Server
  ec2:
    group: "{{ security_group_build }}"
    key_name: "{{ key_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ aim_centos7 }}"
    wait: yes
    wait_timeout: 600
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: 20
    count: 1
    vpc_subnet_id: subnet-00871f75095ffd0aa
    assign_public_ip: yes
    region: "{{ region }}"
    id: "{{ id_token_build }}"
  register: ec2build

- name: Get public IP address of build server
  set_fact: public_ip_build="{{ item.public_ip }}"
  with_items: "{{ ec2build.instances }}"
  register: public_ip_build

- name: Add the newly created host {{ public_ip_build }} to build group
  add_host:
    name: "{{ item.public_ip }}"
    groups: "{{ host_group_name_build }}"
  with_items: "{{ ec2build.instances }}"

- name: Add tag to instance {{ public_ip_build }}
  ec2_tag:
    resource: "{{ item.id }}"
    region: "{{ region }}"
    state: "present"
    tags:
      Name: "Build Server"
  with_items: "{{ ec2build.instances }}"

- name: Wait for SSH to come up build server {{ public_ip_build }}
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    state: started
  with_items: "{{ ec2build.instances }}"

- name: Create a security group for Deployment Server
  ec2_group:
    name: "{{ security_group_deployment }}"
    description: "{{ security_group_deployment }}"
    region: "{{ region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 3000
        to_port: 3000
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0

- name: Deploy Preproduction Server
  ec2:
    group: "{{ security_group_deployment }}"
    key_name: "{{ key_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ aim_centos7 }}"
    wait: yes
    wait_timeout: 600
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: 20
    count: 1
    vpc_subnet_id: subnet-00871f75095ffd0aa
    assign_public_ip: yes
    region: "{{ region }}"
    id: "{{ id_token_preprod }}"
  register: ec2preprod

- name: Get public IP adress of preproduction server
  set_fact: public_ip_preprod="{{ item.public_ip }}"
  with_items: "{{ ec2preprod.instances }}"
  register: public_ip_preprod

- name: Add the newly created host {{ public_ip_preprod }} to preproduction group
  add_host:
    name: "{{ item.public_ip }}"
    groups: "{{ host_group_name_preprod }}"
  with_items: "{{ ec2preprod.instances }}"

- name: Add tag to instance {{ public_ip_preprod }}
  ec2_tag:
    resource: "{{ item.id }}"
    region: "{{ region }}"
    state: "present"
    tags:
      Name: "Preproduction Server"
  with_items: "{{ ec2preprod.instances }}"

- name: Wait for SSH to come up preproduction server {{ public_ip_preprod }}
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    state: started
  with_items: "{{ ec2preprod.instances }}"

- name: Deploy Production Server
  ec2:
    group: "{{ security_group_deployment }}"
    key_name: "{{ key_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ aim_centos7 }}"
    wait: yes
    wait_timeout: 600
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: 20
    count: 1
    vpc_subnet_id: subnet-00871f75095ffd0aa
    assign_public_ip: yes
    region: "{{ region }}"
    id: "{{ id_token_prod }}"
  register: ec2prod

- name: Get public IP adress of production server
  set_fact: public_ip_prod="{{ item.public_ip }}"
  with_items: "{{ ec2prod.instances }}"
  register: public_ip_prod

- name: Add the newly created host {{ public_ip_prod }} to production group
  add_host:
    name: "{{ item.public_ip }}"
    groups: "{{ host_group_name_prod }}"
  with_items: "{{ ec2prod.instances }}"

- name: Add tag to instance {{ public_ip_prod }}
  ec2_tag:
    resource: "{{ item.id }}"
    region: "{{ region }}"
    state: "present"
    tags:
      Name: "Production Server"
  with_items: "{{ ec2prod.instances }}"

- name: Wait for SSH to come up preproduction server {{ public_ip_prod }}
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    state: started
  with_items: "{{ ec2prod.instances }}"
